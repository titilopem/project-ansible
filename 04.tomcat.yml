---
- name: Manage Apache Tomcat
  hosts: group1
  become: true
  tasks:
    - name: Determine Linux distribution
      ansible.builtin.set_fact:
        linux_distribution: "{{ ansible_distribution }}"

    - name: Set Java path for Java 11
      ansible.builtin.set_fact:
        java_home_path: "/usr/lib/jvm/java-11-openjdk"

    - name: Check if Apache Tomcat archive already exists
      ansible.builtin.stat:
        path: "/opt/apache-tomcat-8.5.72.tar.gz"
      register: tomcat_archive

    - name: Download Apache Tomcat 8.5.72 if not present
      ansible.builtin.get_url:
        url: "https://archive.apache.org/dist/tomcat/tomcat-8/v8.5.72/bin/apache-tomcat-8.5.72.tar.gz"
        dest: "/opt/apache-tomcat-8.5.72.tar.gz"
      when: not tomcat_archive.stat.exists

    # Add more tasks as needed

    - name: Extract and move Tomcat contents
      ansible.builtin.command: "tar xvf /opt/apache-tomcat-8.5.72.tar.gz -C /opt/"
      args:
        creates: /opt/apache-tomcat-8.5.72/

    - name: Move Tomcat contents to /opt/tomcat
      ansible.builtin.command: "mv /opt/apache-tomcat-8.5.72/* /opt/tomcat/"
      args:
        creates: /opt/tomcat/bin/startup.sh

    - name: Set JAVA_HOME
      ansible.builtin.lineinfile:
        path: "/etc/environment"
        line: "JAVA_HOME={{ java_home_path }}"
        create: yes

    - name: Reload systemd
      ansible.builtin.systemd:
        daemon_reload: yes

    - name: Restart Tomcat service
      ansible.builtin.systemd:
        name: tomcat
        state: restarted

    - name: Wait for Tomcat to restart
      ansible.builtin.wait_for:
        port: 8080
        delay: 10
        timeout: 300

    - name: Shutdown Tomcat service
      ansible.builtin.shell: "source /etc/environment && /opt/tomcat/bin/shutdown.sh"
      ignore_errors: true  # Ignore errors if shutdown.sh fails initially

    - name: Wait for Tomcat to stop
      ansible.builtin.wait_for:
        port: 8080
        state: stopped
        delay: 10
        timeout: 300
...