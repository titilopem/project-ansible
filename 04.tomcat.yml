---
- name: Manage Apache Tomcat
  hosts: group1
  become: true

  tasks:
    - name: Check if Apache Tomcat archive already exists
      ansible.builtin.stat:
        path: "/opt/apache-tomcat-8.5.72.tar.gz"
      register: tomcat_archive

    - name: Download Apache Tomcat 8.5.72 if not present
      ansible.builtin.get_url:
        url: "https://archive.apache.org/dist/tomcat/tomcat-8/v8.5.72/bin/apache-tomcat-8.5.72.tar.gz"
        dest: "/opt/apache-tomcat-8.5.72.tar.gz"
      when: not tomcat_archive.stat.exists

    - name: Extract and move Tomcat contents
      ansible.builtin.unarchive:
        src: "/opt/apache-tomcat-8.5.72.tar.gz"
        dest: "/opt/"
        remote_src: yes
      when: not tomcat_archive.stat.exists

    - name: Move Tomcat contents to /opt/tomcat
      ansible.builtin.shell: "mv /opt/apache-tomcat-8.5.72/* /opt/tomcat/"
      args:
        creates: "/opt/tomcat/bin/startup.sh"  # Skip if files are already present

    # Set JAVA_HOME
    - name: Set JAVA_HOME
      ansible.builtin.lineinfile:
        path: "/etc/environment"
        line: "JAVA_HOME=/path/to/your/java_home"  # Replace with the correct path
        create: yes

    # The rest of your tasks remain unchanged
    - name: Set environment variables
      ansible.builtin.lineinfile:
        path: "/etc/environment"
        line: "CATALINA_HOME=/opt/tomcat"
        create: yes

    - name: Reload systemd
      ansible.builtin.systemd:
        daemon_reload: yes

    - name: Shutdown Tomcat service
      ansible.builtin.shell: "/opt/tomcat/bin/shutdown.sh"

    - name: Start Tomcat service
      ansible.builtin.shell: "/opt/tomcat/bin/startup.sh"
...