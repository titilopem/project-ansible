- name: Manage Apache Tomcat
  hosts: all
  become: true

  tasks:
    - name: Set JAVA_HOME
      ansible.builtin.set_fact:
        java_home_path: "/usr/lib/jvm/java-11-openjdk-amd64"

    - name: Set environment variables
      ansible.builtin.lineinfile:
        path: "/etc/environment"
        line: "JAVA_HOME={{ java_home_path }}"
        create: yes

    - name: Set Tomcat service name based on distribution
      ansible.builtin.set_fact:
        tomcat_service_name: >-
          {%- if ansible_distribution in ['Ubuntu', 'Debian'] -%}
          tomcat8
          {%- else -%}
          tomcat
          {%- endif -%}

    - name: Set Tomcat path based on distribution
      ansible.builtin.set_fact:
        tomcat_path: "/opt/{{ tomcat_service_name }}"

    - name: Download Apache Tomcat archive
      ansible.builtin.get_url:
        url: "https://archive.apache.org/dist/tomcat/tomcat-8/v8.5.72/bin/apache-tomcat-8.5.72.tar.gz"
        dest: "/tmp"
        mode: '0644'

    - name: Extract and move Tomcat contents
      ansible.builtin.unarchive:
        src: "/tmp/apache-tomcat-8.5.72.tar.gz"
        dest: "{{ tomcat_path }}"
        remote_src: yes

    - name: Reload systemd
      ansible.builtin.systemd:
        daemon_reload: yes

    - name: Shutdown Tomcat service if running
      ansible.builtin.shell: "/bin/bash -c 'source /etc/environment && {{ tomcat_path }}/bin/shutdown.sh'"
      ignore_errors: yes  # Ignore errors if script is not found or service not running

    - name: Start Tomcat service if shutdown.sh exists
      ansible.builtin.shell: "/bin/bash -c 'source /etc/environment && {{ tomcat_path }}/bin/startup.sh'"
      ignore_errors: yes  # Ignore errors if script is not found or service not running
      when: tomcat_path + '/bin/shutdown.sh' | stat | succeeded
...